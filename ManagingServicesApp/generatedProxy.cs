//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------



using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://MSService", ConfigurationName="IMSService")]
public interface IMSService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/StartService", ReplyAction="http://MSService/IMSService/StartServiceResponse")]
    void StartService(string displayName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/StartService", ReplyAction="http://MSService/IMSService/StartServiceResponse")]
    System.Threading.Tasks.Task StartServiceAsync(string displayName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/StopService", ReplyAction="http://MSService/IMSService/StopServiceResponse")]
    void StopService(string displayName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/StopService", ReplyAction="http://MSService/IMSService/StopServiceResponse")]
    System.Threading.Tasks.Task StopServiceAsync(string displayName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/ListAllServices", ReplyAction="http://MSService/IMSService/ListAllServicesResponse")]
    List<string> ListAllServices();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/ListAllServices", ReplyAction="http://MSService/IMSService/ListAllServicesResponse")]
    System.Threading.Tasks.Task<List<string>> ListAllServicesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceName", ReplyAction="http://MSService/IMSService/GetServiceNameResponse")]
    string GetServiceName(string service);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceName", ReplyAction="http://MSService/IMSService/GetServiceNameResponse")]
    System.Threading.Tasks.Task<string> GetServiceNameAsync(string service);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceType", ReplyAction="http://MSService/IMSService/GetServiceTypeResponse")]
    string GetServiceType(string service);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceType", ReplyAction="http://MSService/IMSService/GetServiceTypeResponse")]
    System.Threading.Tasks.Task<string> GetServiceTypeAsync(string service);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceStartType", ReplyAction="http://MSService/IMSService/GetServiceStartTypeResponse")]
    string GetServiceStartType(string service);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceStartType", ReplyAction="http://MSService/IMSService/GetServiceStartTypeResponse")]
    System.Threading.Tasks.Task<string> GetServiceStartTypeAsync(string service);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceStatus", ReplyAction="http://MSService/IMSService/GetServiceStatusResponse")]
    string GetServiceStatus(string service);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://MSService/IMSService/GetServiceStatus", ReplyAction="http://MSService/IMSService/GetServiceStatusResponse")]
    System.Threading.Tasks.Task<string> GetServiceStatusAsync(string service);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMSServiceChannel : IMSService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MSServiceClient : System.ServiceModel.ClientBase<IMSService>, IMSService
{
    
    public MSServiceClient()
    {
    }
    
    public MSServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MSServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void StartService(string displayName)
    {
        base.Channel.StartService(displayName);
    }
    
    public System.Threading.Tasks.Task StartServiceAsync(string displayName)
    {
        return base.Channel.StartServiceAsync(displayName);
    }
    
    public void StopService(string displayName)
    {
        base.Channel.StopService(displayName);
    }
    
    public System.Threading.Tasks.Task StopServiceAsync(string displayName)
    {
        return base.Channel.StopServiceAsync(displayName);
    }
    
    public List<string> ListAllServices()
    {
        return base.Channel.ListAllServices();
    }
    
    public System.Threading.Tasks.Task<List<string>> ListAllServicesAsync()
    {
        return base.Channel.ListAllServicesAsync();
    }
    
    public string GetServiceName(string service)
    {
        return base.Channel.GetServiceName(service);
    }
    
    public System.Threading.Tasks.Task<string> GetServiceNameAsync(string service)
    {
        return base.Channel.GetServiceNameAsync(service);
    }
    
    public string GetServiceType(string service)
    {
        return base.Channel.GetServiceType(service);
    }
    
    public System.Threading.Tasks.Task<string> GetServiceTypeAsync(string service)
    {
        return base.Channel.GetServiceTypeAsync(service);
    }
    
    public string GetServiceStartType(string service)
    {
        return base.Channel.GetServiceStartType(service);
    }
    
    public System.Threading.Tasks.Task<string> GetServiceStartTypeAsync(string service)
    {
        return base.Channel.GetServiceStartTypeAsync(service);
    }
    
    public string GetServiceStatus(string service)
    {
        return base.Channel.GetServiceStatus(service);
    }
    
    public System.Threading.Tasks.Task<string> GetServiceStatusAsync(string service)
    {
        return base.Channel.GetServiceStatusAsync(service);
    }
}
